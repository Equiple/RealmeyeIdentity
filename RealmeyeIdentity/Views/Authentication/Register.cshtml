@using Microsoft.AspNetCore.WebUtilities
@model RegisterModel

@{
    ViewData["Title"] = "Register";

    Dictionary<string, string> registerParams = new()
    {
        { "redirectUri", ViewData["RedirectUri"]?.ToString() ?? "" },
    };
    if (Model.Restore)
    {
        registerParams.Add("restore", "true");
    }

    string startRegisterUri = QueryHelpers.AddQueryString("/register", registerParams);
}

<form asp-action="Register" asp-all-route-data="registerParams" class="main-form">
    <div>
        Paste the given code anywhere in your <a href="https://www.realmeye.com"
            target="_blank">RealmEye</a> profile description before submitting
    </div>
    <div class="form-field">
        <label>Code, expires in <span id="code-timer"></span></label>
        <input asp-for="Code" type="text" readonly />
        <span asp-validation-for="Code"></span>
    </div>
    <div class="form-field">
        <label>RotMG name</label>
        <input asp-for="Name" type="text" />
        <span asp-validation-for="Name"></span>
        @if (Model.AlreadyExists)
        {
            <span>Name is already taken, you can login <a asp-action="Login"
                asp-route-redirectUri="@ViewData["RedirectUri"]">here</a></span>
        }
    </div>
    <div class="form-field">
        <label>Password</label>
        <input asp-for="Password" type="password" placeholder="Numbers and letters, at least 8 characters long" />
        <span asp-validation-for="Password"></span>
        @if (Model.PasswordErrors.Count > 0)
        {
            <span class="static">
                @for (int i = 0; i < Model.PasswordErrors.Count; i++)
                {
                    @if (i > 0)
                    {
                        <br />
                    }
                    @Model.PasswordErrors[i]
                }
            </span>
        }
    </div>
    <div class="form-field">
        <label>Confirm password</label>
        <input asp-for="PasswordConfirmation" type="password" />
        <span asp-validation-for="PasswordConfirmation"></span>
    </div>
    <div class="form-buttons">
        <button type="submit" class="btn">Register</button>

        <a asp-action="Login"
           asp-route-redirectUri="@ViewData["RedirectUri"]">Already registered</a>
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        const timer = document.getElementById('code-timer');
        let timerId = undefined;

        function setTime(timer, seconds) {
            const secs = seconds % 60;
            const mins = (seconds - secs) / 60;
            timer.innerText = `${mins}:${secs < 10 ? '0' : ''}${secs}`;
        }

        function startTimer(seconds) {
            setTime(timer, seconds);
            if (timerId !== undefined) {
                clearInterval(timerId);
            }
            timerId = setInterval(() => {
                if (seconds === 0) {
                    clearInterval(timerId);
                    timerId = undefined;
                    startRegistrationOver();
                    return;
                }
                seconds--;
                setTime(timer, seconds);
            }, 1000);
        }

        function startRegistrationOver() {
            const nameInput = document.getElementById('Name');
            location.assign(`@startRegisterUri&name=${nameInput.value}`);
        }

        startTimer(@Model.CodeExpiresInSeconds);

        document.addEventListener('visibilitychange', async _ => {
            if (document.visibilityState === 'visible') {
                const sessionResponse = await fetch('/getRegistrationSession');
                if (!sessionResponse.ok) {
                    startRegistrationOver();
                    return;
                }
                let sessionJson;
                try {
                    sessionJson = await sessionResponse.json();
                } catch {
                    startRegistrationOver();
                    return;
                }
                if (typeof sessionJson.expiresInSeconds !== 'number') {
                    startRegistrationOver();
                    return;
                }
                startTimer(sessionJson.expiresInSeconds);
            }
        });
    </script>
}
